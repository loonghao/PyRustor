name: Build Wheels

on:
  push:
    branches: [main]
    tags: ['*']
  pull_request:
    paths:
      - 'crates/**'
      - 'python/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'pyproject.toml'
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read
  actions: write # Required for uploading artifacts

jobs:
  # Linux builds
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]

    steps:
      - uses: actions/checkout@v4

      - name: Build and Test Wheel
        uses: ./.github/actions/build-wheel
        with:
          target: ${{ matrix.target }}
          python-version: '3.10'
          test-wheel: ${{ matrix.target == 'x86_64' }}
          artifact-name: 'wheels-linux-${{ matrix.target }}'

  # Linux cross-compilation - only for releases or when requested
  linux-cross:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || contains(github.event.pull_request.labels.*.name, 'build-cross')
    strategy:
      matrix:
        target: [aarch64, armv7]

    steps:
      - uses: actions/checkout@v4

      - name: Build Cross-Platform Wheel
        uses: ./.github/actions/build-wheel
        with:
          target: ${{ matrix.target }}
          python-version: '3.10'
          test-wheel: 'false'  # Skip testing for cross-compiled wheels
          artifact-name: 'wheels-linux-cross-${{ matrix.target }}'

      - name: Test cross-compiled wheel
        uses: uraimo/run-on-arch-action@v3.0.1
        if: matrix.target != 'ppc64le'
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip curl
            curl -LsSf https://astral.sh/uv/install.sh | sh
          run: |
            source $HOME/.local/bin/env
            uv pip install pyrustor --find-links dist/ --force-reinstall --system
            python3 -c "import pyrustor; print('PyRustor imported successfully')"

  # Windows builds
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]

    steps:
      - uses: actions/checkout@v4

      - name: Build and Test Wheel
        uses: ./.github/actions/build-wheel
        with:
          target: ${{ matrix.target }}
          python-version: '3.10'
          test-wheel: 'true'
          artifact-name: 'wheels-windows-${{ matrix.target }}'

  # macOS builds
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, universal2-apple-darwin]

    steps:
      - uses: actions/checkout@v4

      - name: Build and Test Wheel
        uses: ./.github/actions/build-wheel
        with:
          target: ${{ matrix.target }}
          python-version: '3.10'
          maturin-args: ${{ matrix.target == 'x86_64' && '--release --out dist --sdist --find-interpreter' || '--release --out dist --find-interpreter' }}
          test-wheel: 'true'
          artifact-name: 'wheels-macos-${{ matrix.target }}'
