name: Build ABI3 Wheels

on:
  push:
    tags: ['*']
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read
  actions: write # Required for uploading artifacts

jobs:
  # Linux ABI3 builds
  linux-abi3:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: x64
      
      - name: Build ABI3 wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --features abi3 --manifest-path crates/pyrustor-python/Cargo.toml
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
      
      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install pyrustor --find-links dist --force-reinstall
          python -c "import pyrustor; print('PyRustor imported successfully')"
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-abi3-${{ matrix.target }}
          path: dist

  # Windows ABI3 builds
  windows-abi3:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: ${{ matrix.target }}
      
      - name: Build ABI3 wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --features abi3 --manifest-path crates/pyrustor-python/Cargo.toml
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      
      - name: Install built wheel
        if: matrix.target == 'x64'
        run: |
          pip install pyrustor --find-links dist --force-reinstall
          python -c "import pyrustor; print('PyRustor imported successfully')"
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-abi3-${{ matrix.target }}
          path: dist

  # macOS ABI3 builds
  macos-abi3:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: x64

      - name: Build ABI3 wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --features abi3 --manifest-path crates/pyrustor-python/Cargo.toml
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Debug wheel contents
        if: matrix.target == 'x86_64'
        run: |
          echo "Contents of dist directory:"
          ls -la dist/
          echo "Wheel file contents:"
          python -m zipfile -l dist/*.whl

      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install pyrustor --find-links dist --force-reinstall
          python -c "import pyrustor; print('PyRustor imported successfully')"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-abi3-${{ matrix.target }}
          path: dist

  # Build source distribution
  sdist-abi3:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path crates/pyrustor-python/Cargo.toml
      
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist-abi3
          path: dist
