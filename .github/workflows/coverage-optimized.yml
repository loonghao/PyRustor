name: Coverage Optimized

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'crates/**'
      - 'python/**'
      - 'tests/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'pyproject.toml'

permissions:
  contents: read
  pull-requests: write

jobs:
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PyRustor Environment
        uses: ./.github/actions/setup-pyrustor
        with:
          python-version: '3.11'
          cache-key-suffix: 'coverage'
      
      - name: Install coverage tools
        run: just install-coverage-tools
      
      - name: Build extension
        run: just ci-build
        env:
          RUST_BACKTRACE: 1
      
      - name: Generate type stubs
        run: just ci-stubs
      
      - name: Run Rust tests with coverage
        run: just coverage-rust
      
      - name: Run Python tests with coverage
        run: just coverage-python-ci
        env:
          PYTHONUNBUFFERED: 1

      - name: Debug coverage files
        run: |
          echo "Checking for coverage files..."
          ls -la .coverage* || echo "No .coverage files found"
          ls -la coverage.xml || echo "No coverage.xml found"
          echo "Current directory: $(pwd)"
          echo "Coverage config:"
          cat pyproject.toml | grep -A 10 "\[tool.coverage"
      
      - name: Upload Rust coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: target/tarpaulin/cobertura.xml
          flags: rust
          name: rust-coverage
          fail_ci_if_error: false
      
      - name: Upload Python coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: coverage.xml
          flags: python
          name: python-coverage
          fail_ci_if_error: false
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
      
      - name: Archive coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-${{ github.run_id }}
          path: |
            htmlcov/
            target/tarpaulin/
            coverage.xml
            target/tarpaulin/cobertura.xml
          retention-days: 30
      
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 80
          MINIMUM_ORANGE: 70
          COVERAGE_PATH: .
          MERGE_COVERAGE_FILES: false
